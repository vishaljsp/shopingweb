# Generated by Django 4.1.6 on 2023-02-10 05:43

import autoslug.fields
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brands',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brands', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Catogory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Mian_Catogory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Phone_store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(max_length=500, upload_to='media/phone_store/')),
                ('image_name', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Sliders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slider_image', models.ImageField(upload_to='media/slider/')),
                ('slider_image_name', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='SubCatogory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=500)),
                ('catogory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop_app.catogory')),
            ],
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Product_name', models.CharField(max_length=600)),
                ('Products_image', models.ImageField(upload_to='media/product_image/')),
                ('image_name', models.CharField(max_length=500)),
                ('Product_price', models.IntegerField()),
                ('product_info', models.TextField(max_length=1000)),
                ('product_descreption', models.TextField(blank=True, max_length=1000)),
                ('stock', models.CharField(choices=[('IN STOCK', 'IN STOCK'), ('OUT OF STOCK', ' OUT OF STOCK')], max_length=300)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('product_status', models.CharField(choices=[('Publish', 'Publish'), ('Draft', 'Draft')], max_length=300)),
                ('offers', models.TextField(blank=True)),
                ('new_slug', autoslug.fields.AutoSlugField(default=None, editable=False, null=True, populate_from='Product_name', unique=True)),
                ('Main_catogory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop_app.catogory')),
                ('Sub_catogory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop_app.subcatogory')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop_app.brands')),
                ('catogory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop_app.mian_catogory')),
            ],
        ),
        migrations.CreateModel(
            name='Phone_store_images',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(max_length=500, upload_to='media/product_image/')),
                ('image_name', models.CharField(max_length=500)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop_app.phone_store')),
            ],
        ),
        migrations.CreateModel(
            name='Imagess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(max_length=500, upload_to='media/product_image/')),
                ('image_name', models.CharField(max_length=500)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop_app.products')),
            ],
        ),
        migrations.AddField(
            model_name='catogory',
            name='mn_catogory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop_app.mian_catogory'),
        ),
        migrations.CreateModel(
            name='Customeruser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('otp', models.CharField(max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
